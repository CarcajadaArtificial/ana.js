//    _____                                             _
//   |_   _|   _ _ __   ___  ___   __ _ _ __ __ _ _ __ | |__  _   _
//     | || | | | '_ \ / _ \/ _ \ / _` | '__/ _` | '_ \| '_ \| | | |
//     | || |_| | |_) |  __/ (_) | (_| | | | (_| | |_) | | | | |_| |
//     |_| \__, | .__/ \___|\___/ \__, |_|  \__,_| .__/|_| |_|\__, |
//         |___/|_|               |___/          |_|          |___/
////////////////////////////////////////////////////////////////////////////////////////////////////////

// sass-lint:disable property-sort-order

// -----------------------------------------------------------------------------------------------------
// Dependencies
@import './helper.mod';
@import './colors.mod';

// -----------------------------------------------------------------------------------------------------
/// Contains the values of font weights.
/// @type map
/// @group util_type
$font-weight: (
  'regular': 400,
  'bold': 600
);

// -----------------------------------------------------------------------------------------------------
/// Looks for a standard font weight by it's name.
/// @param {string} $weight ['regular'] - The name of a particular font weight, it must be an index of the $font-weight map.
/// @example scss - Sass
///   p {
///     font-weight: font-weight('regular');
///   }
/// @example css - Compiled CSS
///   p {
///     font-weight: 400;
///   }
/// @group util_type
@function font-weight($weight: 'regular') {
  @if (map-has-key($font-weight, $weight)) {
    @return map-get($font-weight, $weight);
  } @else {
    @return throw(
      'The font weight named "#{$weight}" was not found.',
      indexing
    );
  }
}

// -----------------------------------------------------------------------------------------------------
/// Contains the values of font size.
/// @type map
/// @group util_type
$font-size: (
  'small': 8px,
  'label': 12px,
  'paragraph': 14px,
  'subheading': 18px,
  'heading': 27px,
  'title': 40.5px,
  'display': 60.75px
);

// -----------------------------------------------------------------------------------------------------
/// Looks for a standard font size by it's name.
/// @param {string} $size ['label'] - The name of a particular font size, it must be an index of the $font-size map.
/// @example scss - Sass
///   p {
///     font-size: font-size('label');
///   }
/// @example css - Compiled CSS
///   p {
///     font-size: 12px;
///   }
/// @group util_type
@function font-size($size: 'label') {
  @if (map-has-key($font-size, $size)) {
    @return map-get($font-size, $size);
  } @else {
    @return throw('The font size named "#{$size}" was not found.', indexing);
  }
}

// -----------------------------------------------------------------------------------------------------
/// Contains the values of line height.
/// @type map
/// @group util_type
$line-height: (
  'small': 12px,
  'paragraph': 16px,
  'label': 16px,
  'subheading': 24px,
  'heading': 36px,
  'title': 48px,
  'display': 84px
);

// -----------------------------------------------------------------------------------------------------
/// Looks for a standard line height by it's name.
/// @param {string} $height ['label'] - The name of a particular line height, it must be an index of the $line-height map.
/// @example scss - Sass
///   p {
///     line-height: line-height('label');
///   }
/// @example css - Compiled CSS
///   p {
///     line-height: 16px;
///   }
/// @group util_type
@function line-height($height: 'label') {
  @if (map-has-key($line-height, $height)) {
    @return map-get($line-height, $height);
  } @else {
    @return throw(
      'The line height named "#{$height}" was not found.',
      indexing
    );
  }
}

// -----------------------------------------------------------------------------------------------------
/// Contains the values of spaces like margins, paddings, or gaps.
/// @type map
/// @group util_type
$spacing: (
  'xs': 4px,
  'sm': 8px,
  'md': 16px,
  'lg': 32px,
  'xl': 64px
);

// -----------------------------------------------------------------------------------------------------
/// Looks for a standard spacing by it's name.
/// @param {string} $space ['md'] - The name of a particular spacing, it must be an index of the $spacing map.
/// @example scss - Sass
///   span {
///     padding: spacing('md');
///   }
/// @example css - Compiled CSS
///   span {
///     padding: 12px;
///   }
/// @group util_type
@function spacing($space: 'md') {
  @if (map-has-key($spacing, $space)) {
    @return map-get($spacing, $space);
  } @else {
    @return throw('The spacing named "#{$space}" was not found.', indexing);
  }
}

// -----------------------------------------------------------------------------------------------------
/// Contains the values of spaces like margins, paddings, or gaps.
/// @type map
/// @group util_type
$default-type-color: clr('grey', 'darkest');

// -----------------------------------------------------------------------------------------------------
/// A Display is large decorative text found rarely on a page. It can be used in any way as long as the text doesn't feel crowded and is legible.
/// @param {string} color ['#fff']
/// @param {number} font-weight [600]
/// @param {number} margin-bottom [0]
/// @param {string} text-align [center]
/// @output Standard display style for text.
/// @example scss - Sass
///   span {
///     @include txt-display;
///   }
/// @example css - Compiled CSS
///   span {
///     font-size: 60.75px;
///     line-height: 84px;
///     color: #fff;
///     font-weight: 600;
///     margin-bottom: 0;
///     text-align: center;
///   }
/// @group util_type
@mixin txt-display(
  $color: $default-type-color,
  $font-weight: font-weight('bold'),
  $margin-bottom: 0,
  $text-align: center
) {
  font-size: font-size('display');
  line-height: line-height('display');
  // Overridables
  color: $color;
  font-weight: $font-weight;
  margin-bottom: $margin-bottom !important; // sass-lint:disable-line no-important
  text-align: $text-align;
}

// -----------------------------------------------------------------------------------------------------
/// A Label is one of two base typographical elements, along with a Paragraph. This element is used for short text, a few words at most. For multilinear text, use a Paragraph instead.
/// @param {string} color ['#fff']
/// @param {number} font-weight [400]
/// @param {number} margin-bottom [0]
/// @param {string} text-align [left]
/// @output Standard label style for text.
/// @example scss - Sass
///   span {
///     @include txt-label;
///   }
/// @example css - Compiled CSS
///   span {
///     font-size: 12px;
///     line-height: 16px;
///     color: #fff;
///     font-weight: 400;
///     margin-bottom: 0;
///     text-align: left;
///   }
/// @group util_type
@mixin txt-label(
  $color: $default-type-color,
  $font-weight: font-weight('regular'),
  $margin-bottom: 0,
  $text-align: left
) {
  font-size: font-size('label');
  line-height: line-height('label');
  // Overridables
  color: $color;
  font-weight: $font-weight;
  margin-bottom: $margin-bottom !important; // sass-lint:disable-line no-important
  text-align: $text-align;
}

// -----------------------------------------------------------------------------------------------------
/// A Paragraph is one of two base typographical element, along with a Label. This element's use is for text that has multiple lines and more text after it, maybe a heading or another paragraph. If the content inside the element is a few words long, use a Label instead.
/// @param {string} color ['#fff']
/// @param {number} font-weight [400]
/// @param {number} margin-bottom [0]
/// @param {string} text-align [left]
/// @output Standard paragraph style for text.
/// @example scss - Sass
///   p {
///     @include txt-paragraph;
///   }
/// @example css - Compiled CSS
///   p {
///     font-size: 12px;
///     line-height: 16px;
///     color: #fff;
///     font-weight: 400;
///     margin-bottom: 0;
///     text-align: left;
///   }
/// @group util_type
@mixin txt-paragraph(
  $color: $default-type-color,
  $font-weight: font-weight('regular'),
  $margin-bottom: 0,
  $text-align: left
) {
  font-size: font-size('paragraph');
  line-height: line-height('paragraph');
  // Overridables
  color: $color;
  font-weight: $font-weight;
  margin-bottom: $margin-bottom !important; // sass-lint:disable-line no-important
  text-align: $text-align;
}

// -----------------------------------------------------------------------------------------------------
/// The Small is the shortest typographical element, it is used inside small elements that require text, like Chips or small Buttons.
/// @param {string} color ['#fff']
/// @param {number} font-weight [400]
/// @param {number} margin-bottom [0]
/// @param {string} text-align [left]
/// @output Standard small style for small text.
/// @example scss - Sass
///   span {
///     @include txt-small;
///   }
/// @example css - Compiled CSS
///   span {
///     font-size: 8px;
///     line-height: 12px;
///     color: #fff;
///     font-weight: 400;
///     margin-bottom: 0;
///     text-align: left;
///   }
/// @group util_type
@mixin txt-small(
  $color: $default-type-color,
  $font-weight: font-weight('regular'),
  $margin-bottom: 0,
  $text-align: left
) {
  font-size: font-size('small');
  line-height: line-height('small');
  // Overridables
  color: $color;
  font-weight: $font-weight;
  margin-bottom: $margin-bottom !important; // sass-lint:disable-line no-important
  text-align: $text-align;
}

// -----------------------------------------------------------------------------------------------------
/// A Subheading is the smallest of the three heading types, along with a Heading and Title. It is conventionally used for titles of subsections, multiple of these can be found inside a section.
/// @param {string} color ['#fff']
/// @param {number} font-weight [600]
/// @param {number} margin-bottom [0]
/// @param {string} text-align [left]
/// @output Standard small style for subhedings.
/// @example scss - Sass
///   h3 {
///     @include txt-subheading;
///   }
/// @example css - Compiled CSS
///   h3 {
///     font-size: 18px;
///     line-height: 24px;
///     color: #fff;
///     font-weight: 600;
///     margin-bottom: 0;
///     text-align: left;
///   }
/// @group util_type
@mixin txt-subheading(
  $color: $default-type-color,
  $font-weight: font-weight('bold'),
  $margin-bottom: 0,
  $text-align: left
) {
  font-size: font-size('subheading');
  line-height: line-height('subheading');
  // Overridables
  color: $color;
  font-weight: $font-weight;
  margin-bottom: $margin-bottom !important; // sass-lint:disable-line no-important
  text-align: $text-align;
}

// -----------------------------------------------------------------------------------------------------
/// A Heading is the medium-sized heading of the three heading types, the other two being the Subheading and the Title. It is conventionally used for titles of page sections, multiple of these can be found inside a single page.
/// @param {string} color ['#fff']
/// @param {number} font-weight [600]
/// @param {number} margin-bottom [0]
/// @param {string} text-align [left]
/// @output Standard small style for headings.
/// @example scss - Sass
///   h2 {
///     @include txt-heading;
///   }
/// @example css - Compiled CSS
///   h2 {
///     font-size: 27px;
///     line-height: 36px;
///     color: #fff;
///     font-weight: 600;
///     margin-bottom: 0;
///     text-align: left;
///   }
/// @group util_type
@mixin txt-heading(
  $color: $default-type-color,
  $font-weight: font-weight('bold'),
  $margin-bottom: 0,
  $text-align: left
) {
  font-size: font-size('heading');
  line-height: line-height('heading');
  // Overridables
  color: $color;
  font-weight: $font-weight;
  margin-bottom: $margin-bottom !important; // sass-lint:disable-line no-important
  text-align: $text-align;
}

// -----------------------------------------------------------------------------------------------------
/// A Title is the largest heading of the three heading types, the other two being the Heading and Subheading. It is conventionally used for page title and only one can be found, usually at the top of the page.
/// @param {string} color ['#fff']
/// @param {number} font-weight [600]
/// @param {number} margin-bottom [0]
/// @param {string} text-align [left]
/// @output Standard small style for titles.
/// @example scss - Sass
///   h1 {
///     @include txt-title;
///   }
/// @example css - Compiled CSS
///   h1 {
///     font-size: 27px;
///     line-height: 36px;
///     color: #fff;
///     font-weight: 600;
///     margin-bottom: 0;
///     text-align: left;
///   }
/// @group util_type
@mixin txt-title(
  $color: $default-type-color,
  $font-weight: font-weight('bold'),
  $margin-bottom: 0,
  $text-align: left
) {
  font-size: font-size('title');
  line-height: line-height('title');
  // Overridables
  color: $color;
  font-weight: $font-weight;
  margin-bottom: $margin-bottom !important; // sass-lint:disable-line no-important
  text-align: $text-align;
}

// -----------------------------------------------------------------------------------------------------
@mixin txt-link(
  $color: clr('blue'),
  $color-visited: clr('violet'),
  $font-weight: font-weight('regular')
) {
  @include txt-paragraph($color: $color);
  cursor: pointer;
  text-decoration: none;
  font-weight: $font-weight;

  &:hover {
    text-decoration: underline;
  }

  &:visited {
    font-style: italic;
    color: $color-visited
  }
}

// -----------------------------------------------------------------------------------------------------
/// A Title is the largest heading of the three heading types, the other two being the Heading and Subheading. It is conventionally used for page title and only one can be found, usually at the top of the page.
/// @param {number} lines [1]
/// @param {number} height [auto]
/// @param {boolean} minMax [false]
/// @param {boolean} breakWord [true]
/// @output 
/// @example scss - Sass
///   h1 {
///     @include clamp;
///   }
/// @example css - Compiled CSS
///   h1 {
///     
///   }
/// @group util_type
@mixin clamp(
  $lines: 1,
  $height: auto,
  $minMax: false,
  $breakWord: true,
  $whiteSpace: false
) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  text-overflow: ellipsis;
  overflow: hidden;
  height: $height;

  @if $breakWord {
    overflow-wrap: break-word;
  }

  @if $whiteSpace {
    white-space: pre;
  }

  @if $minMax {
    max-height: $height;
    min-height: $height;
  }
}
