//     ____      _
//    / ___|___ | | ___  _ __ ___
//   | |   / _ \| |/ _ \| '__/ __|
//   | |__| (_) | | (_) | |  \__ \
//    \____\___/|_|\___/|_|  |___/
//
////////////////////////////////////////////////////////////////////////////////////////////////////////

// Dependencies
@import 'error.mod';

// -----------------------------------------------------------------------------------------------------
///  Retrieves a color value from the $colors Sass map
///  @param {string} color-name - quoted, lower-case, dasherized color name (e.g. 'pink', 'amber')
///  @param {string} color-variant ['base'] - quoted, lowercase color variant (e.g. 'lightest', 'a100')
@function clr($color-name, $color-variant: 'base') {
  $color: map-get(map-get($colors, $color-name), $color-variant);

  @if $color {
    @return $color;
  } @else {
    // Libsass still doesn't seem to support @error
    @return throw(
      '=> ERROR: COLOR NOT FOUND! <= | Your #{$color-name}, #{$color-variant} combination did not match any of the values in the $colors map.'
    );
  }
}

// -----------------------------------------------------------------------------------------------------
$colors: (
  'red': (
    'white': var(--clr-red-white),
    'tint-lightest': var(--clr-red-tint-lightest),
    'tint-lighter': var(--clr-red-tint-lighter),
    'tint-light': var(--clr-red-tint-light),
    'lightest': var(--clr-red-lightest),
    'lighter': var(--clr-red-lighter),
    'light': var(--clr-red-light),
    'base': var(--clr-red-base),
    'dark': var(--clr-red-dark),
    'darker': var(--clr-red-darker),
    'darkest': var(--clr-red-darkest),
    'shade': var(--clr-red-shade),
    'black': var(--clr-red-black),
  ),
  'violet': (
    'white': var(--clr-violet-white),
    'tint-lightest': var(--clr-violet-tint-lightest),
    'tint-lighter': var(--clr-violet-tint-lighter),
    'tint-light': var(--clr-violet-tint-light),
    'lightest': var(--clr-violet-lightest),
    'lighter': var(--clr-violet-lighter),
    'light': var(--clr-violet-light),
    'base': var(--clr-violet-base),
    'dark': var(--clr-violet-dark),
    'darker': var(--clr-violet-darker),
    'darkest': var(--clr-violet-darkest),
    'shade': var(--clr-violet-shade),
    'black': var(--clr-violet-black),
  ),
  'blue': (
    'white': var(--clr-blue-white),
    'tint-lightest': var(--clr-blue-tint-lightest),
    'tint-lighter': var(--clr-blue-tint-lighter),
    'tint-light': var(--clr-blue-tint-light),
    'lightest': var(--clr-blue-lightest),
    'lighter': var(--clr-blue-lighter),
    'light': var(--clr-blue-light),
    'base': var(--clr-blue-base),
    'dark': var(--clr-blue-dark),
    'darker': var(--clr-blue-darker),
    'darkest': var(--clr-blue-darkest),
    'shade': var(--clr-blue-shade),
    'black': var(--clr-blue-black),
  ),
  'cyan': (
    'white': var(--clr-cyan-white),
    'tint-lightest': var(--clr-cyan-tint-lightest),
    'tint-lighter': var(--clr-cyan-tint-lighter),
    'tint-light': var(--clr-cyan-tint-light),
    'lightest': var(--clr-cyan-lightest),
    'lighter': var(--clr-cyan-lighter),
    'light': var(--clr-cyan-light),
    'base': var(--clr-cyan-base),
    'dark': var(--clr-cyan-dark),
    'darker': var(--clr-cyan-darker),
    'darkest': var(--clr-cyan-darkest),
    'shade': var(--clr-cyan-shade),
    'black': var(--clr-cyan-black),
  ),
  'green': (
    'white': var(--clr-green-white),
    'tint-lightest': var(--clr-green-tint-lightest),
    'tint-lighter': var(--clr-green-tint-lighter),
    'tint-light': var(--clr-green-tint-light),
    'lightest': var(--clr-green-lightest),
    'lighter': var(--clr-green-lighter),
    'light': var(--clr-green-light),
    'base': var(--clr-green-base),
    'dark': var(--clr-green-dark),
    'darker': var(--clr-green-darker),
    'darkest': var(--clr-green-darkest),
    'shade': var(--clr-green-shade),
    'black': var(--clr-green-black),
  ),
  'lime': (
    'white': var(--clr-lime-white),
    'tint-lightest': var(--clr-lime-tint-lightest),
    'tint-lighter': var(--clr-lime-tint-lighter),
    'tint-light': var(--clr-lime-tint-light),
    'lightest': var(--clr-lime-lightest),
    'lighter': var(--clr-lime-lighter),
    'light': var(--clr-lime-light),
    'base': var(--clr-lime-base),
    'dark': var(--clr-lime-dark),
    'darker': var(--clr-lime-darker),
    'darkest': var(--clr-lime-darkest),
    'shade': var(--clr-lime-shade),
    'black': var(--clr-lime-black),
  ),
  'yellow': (
    'white': var(--clr-yellow-white),
    'tint-lightest': var(--clr-yellow-tint-lightest),
    'tint-lighter': var(--clr-yellow-tint-lighter),
    'tint-light': var(--clr-yellow-tint-light),
    'lightest': var(--clr-yellow-lightest),
    'lighter': var(--clr-yellow-lighter),
    'light': var(--clr-yellow-light),
    'base': var(--clr-yellow-base),
    'dark': var(--clr-yellow-dark),
    'darker': var(--clr-yellow-darker),
    'darkest': var(--clr-yellow-darkest),
    'shade': var(--clr-yellow-shade),
    'black': var(--clr-yellow-black),
  ),
  'orange': (
    'white': var(--clr-orange-white),
    'tint-lightest': var(--clr-orange-tint-lightest),
    'tint-lighter': var(--clr-orange-tint-lighter),
    'tint-light': var(--clr-orange-tint-light),
    'lightest': var(--clr-orange-lightest),
    'lighter': var(--clr-orange-lighter),
    'light': var(--clr-orange-light),
    'base': var(--clr-orange-base),
    'dark': var(--clr-orange-dark),
    'darker': var(--clr-orange-darker),
    'darkest': var(--clr-orange-darkest),
    'shade': var(--clr-orange-shade),
    'black': var(--clr-orange-black),
  ),
  'grey': (
    'white': var(--clr-grey-white),
    'tint-lightest': var(--clr-grey-tint-lightest),
    'tint-lighter': var(--clr-grey-tint-lighter),
    'tint-light': var(--clr-grey-tint-light),
    'lightest': var(--clr-grey-lightest),
    'lighter': var(--clr-grey-lighter),
    'light': var(--clr-grey-light),
    'base': var(--clr-grey-base),
    'dark': var(--clr-grey-dark),
    'darker': var(--clr-grey-darker),
    'darkest': var(--clr-grey-darkest),
    'shade': var(--clr-grey-shade),
    'black': var(--clr-grey-black),
  )
);

// -----------------------------------------------------------------------------------------------------
@mixin surface-card {
  background-color: clr('blue', 'white');
  border-radius: 4px;
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
  padding: 16px;
}